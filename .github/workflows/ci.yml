name: CI
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        description: Code coverrage token
        required: true
      GH_FG_TOKEN:
        required: true
      BUILD_DOCKER_IF_NEEDED:
        required: false
    outputs:
      status:
        description: Whether deployment succeeded or not
        value: ${{ jobs.deploy.outputs.status }}
  pull_request:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            ui/node_modules
            server/node_modules
            yarn.lock
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_FG_TOKEN }}

      - run: |
          if [ ! -d node_modules ]
          then
            yarn plugin import workspace-tools
            yarn workspaces focus --all
            if [ "$BUILD" = true ]
            then
              tar -czf node_modules.tar.gz ./node_modules ./ui/node_modules ./server/node_modules yarn.lock
              docker build . --tag ghcr.io/mission-apprentissage/mna_bal_deps_installer:latest \
              --label "org.opencontainers.image.source=https://github.com/mission-apprentissage/bal" \
              --label "org.opencontainers.image.description=Ui bal" \
              --label "org.opencontainers.image.licenses=MIT"
              docker push ghcr.io/mission-apprentissage/mna_bal_deps_installer:latest
            else
              echo "no build required"
            fi
          else
            echo "no install required"
          fi
        shell: bash
        env:
          build: ${{ secrets.BUILD_DOCKER_IF_NEEDED }}

      - run: make ci

      - run: make coverage

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

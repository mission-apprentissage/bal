name: Release version
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  tests:
    if: "!startsWith(github.event.head_commit.message, 'chore')"
    uses: "./.github/workflows/ci.yml"
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      GH_FG_TOKEN: ${{ secrets.GH_FG_TOKEN }}
      BUILD_DOCKER_IF_NEEDED: "true"

  release:
    if: "!startsWith(github.event.head_commit.message, 'chore')"
    needs: ["tests"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            ui/node_modules
            server/node_modules
            yarn.lock
            .mna_bal_deps_installer_build
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_FG_TOKEN }}

      - run: git fetch --all

      - run: |
          if echo $(git log origin/main -1 --pretty=%B) | grep -c "chore(release): bump "
          then
            git config --global user.email $USER_EMAIL
            git config --global user.name $USER_NAME
            git merge --no-edit -m "Merge remote-tracking branch 'refs/remotes/origin/main' [skip ci]"
            git push --tags https://$GH_TOKEN@github.com/mission-apprentissage/bal.git main --force
          else
            echo "skip pull"
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_FG_TOKEN }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_NAME: ${{ secrets.USER_NAME }}

      - name: bump and release
        run: npx antoinebigard-semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_FG_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_FG_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

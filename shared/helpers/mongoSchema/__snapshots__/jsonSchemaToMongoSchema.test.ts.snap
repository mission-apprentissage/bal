// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`jsonSchemaToMongoSchema > should convert documentContents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "content": {
      "bsonType": "object",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "document_id": {
      "bsonType": "string",
    },
    "type_document": {
      "bsonType": "string",
      "description": "Le type de document (exemple: DECA, etc..)",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "document_id",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert documents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant du document",
    },
    "added_by": {
      "bsonType": "string",
      "description": "Qui a ajouté le fichier",
    },
    "chemin_fichier": {
      "bsonType": "string",
      "description": "Chemin du fichier binaire",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "ext_fichier": {
      "bsonType": "string",
      "description": "Le type de fichier extension",
      "enum": [
        "xlsx",
        "xls",
        "csv",
      ],
    },
    "hash_fichier": {
      "bsonType": "string",
      "description": "Checksum fichier",
    },
    "hash_secret": {
      "bsonType": "string",
      "description": "Hash fichier",
    },
    "import_progress": {
      "bsonType": "number",
      "description": "Progress percentage (-1 not started)",
    },
    "lines_count": {
      "bsonType": "int",
      "description": "Number of lines",
    },
    "nom_fichier": {
      "bsonType": "string",
      "description": "Le nom de fichier",
    },
    "taille_fichier": {
      "bsonType": "int",
      "description": "Taille du fichier en bytes",
    },
    "type_document": {
      "bsonType": "string",
      "description": "Le type de document (exemple: DECA, etc..)",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "type_document",
    "ext_fichier",
    "nom_fichier",
    "chemin_fichier",
    "taille_fichier",
    "hash_secret",
    "hash_fichier",
    "added_by",
    "created_at",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert events schema 1`] = `
{
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "name": {
      "bsonType": "string",
      "enum": [
        "bal_emails",
      ],
    },
    "payload": {
      "anyOf": [
        {
          "additionalProperties": true,
          "bsonType": "object",
          "properties": {
            "emails": {
              "bsonType": "array",
              "items": {
                "additionalProperties": true,
                "bsonType": "object",
                "properties": {
                  "error": {
                    "bsonType": "array",
                    "items": {
                      "bsonType": "object",
                      "properties": {
                        "err_type": {
                          "bsonType": "string",
                          "enum": [
                            "fatal",
                            "soft_bounce",
                            "hard_bounce",
                            "complaint",
                            "invalid_email",
                            "blocked",
                            "error",
                          ],
                        },
                        "message": {
                          "bsonType": "string",
                        },
                      },
                    },
                  },
                  "messageIds": {
                    "bsonType": "array",
                    "items": {
                      "bsonType": "string",
                    },
                  },
                  "openDate": {
                    "bsonType": "date",
                  },
                  "payload": {
                    "additionalProperties": true,
                    "bsonType": "object",
                    "properties": {
                      "recipient": {
                        "additionalProperties": true,
                        "bsonType": "object",
                        "properties": {
                          "email": {
                            "bsonType": "string",
                          },
                        },
                        "required": [
                          "email",
                        ],
                      },
                    },
                    "required": [
                      "recipient",
                    ],
                  },
                  "sendDates": {
                    "bsonType": "array",
                    "items": {
                      "bsonType": "date",
                    },
                  },
                  "templateName": {
                    "bsonType": "string",
                  },
                  "token": {
                    "bsonType": "string",
                  },
                },
                "required": [
                  "token",
                  "templateName",
                  "sendDates",
                  "payload",
                ],
              },
            },
            "unsubscribe": {
              "bsonType": "bool",
              "description": "unsubscribe email",
            },
          },
          "required": [
            "emails",
          ],
        },
      ],
    },
    "person_id": {
      "bsonType": "string",
    },
  },
  "required": [
    "person_id",
    "name",
    "payload",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert jobs schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "ended_at": {
      "bsonType": "date",
      "description": "Date de fin d'execution",
    },
    "name": {
      "bsonType": "string",
      "description": "Le nom de la tâche",
    },
    "output": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Les valeurs de retours du job",
    },
    "payload": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "La donnée liéé à la tâche",
    },
    "scheduled_at": {
      "bsonType": "date",
      "description": "Date de lancement programmée",
    },
    "started_at": {
      "bsonType": "date",
      "description": "Date de lancement",
    },
    "status": {
      "bsonType": "string",
      "description": "Statut courant du job",
      "enum": [
        "pending",
        "will_start",
        "running",
        "finished",
        "blocked",
        "errored",
      ],
    },
    "sync": {
      "bsonType": "bool",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "name",
    "status",
    "scheduled_at",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert organisations schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "properties": {
        "source": {
          "bsonType": "string",
        },
      },
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email_domains": {
      "bsonType": "array",
      "items": {
        "bsonType": "string",
      },
    },
    "etablissements": {
      "bsonType": "array",
      "items": {
        "additionalProperties": false,
        "bsonType": "object",
        "properties": {
          "is_close": {
            "bsonType": "bool",
            "description": "Est fermé",
          },
          "is_hq": {
            "bsonType": "bool",
            "description": "Siége social",
          },
          "nom": {
            "bsonType": "string",
            "description": "Nom de l'établissement",
          },
          "siret": {
            "bsonType": "string",
            "description": "Siret actif de l'établissement",
          },
        },
      },
    },
    "nom": {
      "bsonType": "string",
      "description": "Nom de l'organisation",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert persons schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "properties": {
        "source": {
          "bsonType": "string",
        },
      },
    },
    "civility": {
      "bsonType": "string",
      "description": "civilité",
      "enum": [
        "Madame",
        "Monsieur",
      ],
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
    },
    "nom": {
      "bsonType": "string",
      "description": "Le nom de la personne",
    },
    "organisation_id": {
      "bsonType": "string",
    },
    "prenom": {
      "bsonType": "string",
      "description": "Le prénom de la personne",
    },
    "sirets": {
      "bsonType": "array",
      "description": "Liste de sirets recensé (sécurisation qualité de la donnée)",
      "items": {
        "bsonType": "string",
      },
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "organisation_id",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert sessions schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "token": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "token",
  ],
}
`;

exports[`jsonSchemaToMongoSchema > should convert users schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "api_key": {
      "bsonType": "string",
    },
    "api_key_used_at": {
      "bsonType": "date",
      "description": "Date de denière utilisation de la clé api",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
    },
    "is_admin": {
      "bsonType": "bool",
    },
    "password": {
      "bsonType": "string",
    },
    "person_id": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "password",
    "person_id",
  ],
}
`;

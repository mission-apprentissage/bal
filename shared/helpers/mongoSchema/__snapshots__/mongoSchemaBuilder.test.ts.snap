// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zodToMongoSchema > should convert documentContents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "content": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Contenu du document",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "document_id": {
      "bsonType": "string",
      "description": "Identifiant du document",
    },
    "type_document": {
      "bsonType": "string",
      "description": "Le type de document (exemple: DECA, etc..)",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "document_id",
  ],
}
`;

exports[`zodToMongoSchema > should convert documents schema 1`] = `
{
  "anyOf": [
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
        },
        "added_by": {
          "bsonType": "string",
          "description": "Qui a ajouté le fichier",
        },
        "chemin_fichier": {
          "bsonType": "string",
          "description": "Chemin du fichier binaire",
        },
        "columns": {
          "anyOf": [
            {
              "bsonType": "array",
              "items": {
                "bsonType": "string",
              },
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Liste des colonnes",
        },
        "created_at": {
          "bsonType": "date",
          "description": "Date d'ajout en base de données",
        },
        "delimiter": {
          "bsonType": [
            "string",
            "null",
          ],
          "description": "Délimiteur",
        },
        "ext_fichier": {
          "bsonType": "string",
          "description": "Le type de fichier extension",
          "enum": [
            "xlsx",
            "xls",
            "csv",
          ],
        },
        "hash_fichier": {
          "bsonType": "string",
          "description": "Checksum fichier",
        },
        "hash_secret": {
          "bsonType": "string",
          "description": "Hash fichier",
        },
        "import_progress": {
          "anyOf": [
            {
              "bsonType": "number",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Progress percentage (-1 not started)",
        },
        "job_error": {
          "bsonType": [
            "string",
            "null",
          ],
          "description": "Erreur du job de génération",
        },
        "job_id": {
          "bsonType": [
            "string",
            "null",
          ],
          "description": "Identifiant du job de génération",
        },
        "job_status": {
          "bsonType": "string",
          "description": "Status du job de génération",
          "enum": [
            "pending",
            "importing",
            "done",
            "error",
          ],
        },
        "kind": {
          "bsonType": "string",
        },
        "lines_count": {
          "anyOf": [
            {
              "bsonType": "int",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Number of lines",
        },
        "nom_fichier": {
          "bsonType": "string",
          "description": "Le nom de fichier",
        },
        "taille_fichier": {
          "bsonType": "int",
          "description": "Taille du fichier en bytes",
        },
        "type_document": {
          "bsonType": "string",
          "description": "Le type de document (exemple: DECA, etc..)",
        },
        "updated_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Date de mise à jour en base de données",
        },
      },
      "required": [
        "_id",
        "kind",
        "type_document",
        "ext_fichier",
        "nom_fichier",
        "chemin_fichier",
        "taille_fichier",
        "hash_secret",
        "hash_fichier",
        "added_by",
        "created_at",
        "job_status",
      ],
    },
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
        },
        "added_by": {
          "bsonType": "string",
          "description": "Qui a ajouté le fichier",
        },
        "chemin_fichier": {
          "bsonType": "string",
          "description": "Chemin du fichier binaire",
        },
        "created_at": {
          "bsonType": "date",
          "description": "Date d'ajout en base de données",
        },
        "ext_fichier": {
          "bsonType": "string",
          "description": "Le type de fichier extension",
          "enum": [
            "xlsx",
            "xls",
            "csv",
          ],
        },
        "hash_fichier": {
          "bsonType": "string",
          "description": "Checksum fichier",
        },
        "hash_secret": {
          "bsonType": "string",
          "description": "Hash fichier",
        },
        "job_id": {
          "bsonType": [
            "string",
            "null",
          ],
          "description": "Identifiant du job de génération",
        },
        "job_status": {
          "bsonType": "string",
          "description": "Status du job de génération",
          "enum": [
            "pending",
            "processing",
            "done",
            "error",
          ],
        },
        "kind": {
          "bsonType": "string",
        },
        "lines_count": {
          "bsonType": "int",
          "description": "Number of lines",
        },
        "nom_fichier": {
          "bsonType": "string",
          "description": "Le nom de fichier",
        },
        "process_progress": {
          "bsonType": "number",
          "description": "Number of lines processed",
        },
        "taille_fichier": {
          "bsonType": "int",
          "description": "Taille du fichier en bytes",
        },
        "type_document": {
          "bsonType": "string",
          "description": "Le type de document (exemple: DECA, etc..)",
        },
        "updated_at": {
          "bsonType": "date",
          "description": "Date de mise à jour en base de données",
        },
      },
      "required": [
        "_id",
        "kind",
        "type_document",
        "ext_fichier",
        "nom_fichier",
        "chemin_fichier",
        "taille_fichier",
        "hash_secret",
        "hash_fichier",
        "added_by",
        "created_at",
        "job_status",
      ],
    },
  ],
}
`;

exports[`zodToMongoSchema > should convert emailDenied schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "L'email rejetée",
    },
    "reason": {
      "bsonType": "string",
      "enum": [
        "unsubscribe",
      ],
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "reason",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert events schema 1`] = `
{
  "anyOf": [
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
        },
        "created_at": {
          "bsonType": "date",
        },
        "delivered_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "errors": {
          "bsonType": "array",
          "items": {
            "additionalProperties": false,
            "bsonType": "object",
            "properties": {
              "message": {
                "bsonType": "string",
              },
              "type": {
                "bsonType": "string",
                "enum": [
                  "fatal",
                  "soft_bounce",
                  "hard_bounce",
                  "complaint",
                  "invalid_email",
                  "blocked",
                  "error",
                ],
              },
            },
          },
        },
        "messageId": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "opened_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "person_id": {
          "bsonType": "string",
          "description": "Identifiant de la personne",
        },
        "template": {
          "anyOf": [
            {
              "additionalProperties": false,
              "bsonType": "object",
              "properties": {
                "civility": {
                  "anyOf": [
                    {
                      "bsonType": "string",
                      "enum": [
                        "Madame",
                        "Monsieur",
                      ],
                    },
                    {
                      "bsonType": "null",
                    },
                  ],
                },
                "name": {
                  "bsonType": "string",
                },
                "nom": {
                  "bsonType": [
                    "string",
                    "null",
                  ],
                },
                "prenom": {
                  "bsonType": [
                    "string",
                    "null",
                  ],
                },
                "resetPasswordToken": {
                  "bsonType": "string",
                },
                "to": {
                  "bsonType": "string",
                },
              },
              "required": [
                "name",
                "to",
                "resetPasswordToken",
              ],
            },
          ],
        },
        "type": {
          "bsonType": "string",
          "description": "Type de l'évènement",
        },
        "updated_at": {
          "bsonType": "date",
        },
      },
      "required": [
        "_id",
        "type",
        "person_id",
        "template",
        "created_at",
        "updated_at",
        "opened_at",
        "delivered_at",
        "messageId",
        "errors",
      ],
    },
  ],
}
`;

exports[`zodToMongoSchema > should convert organisations schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Métadonnées",
      "properties": {
        "sources": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
      },
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email_domains": {
      "bsonType": "array",
      "description": "Liste des domaines email",
      "items": {
        "bsonType": "string",
      },
    },
    "etablissements": {
      "bsonType": "array",
      "description": "Liste des établissements",
      "items": {
        "additionalProperties": false,
        "bsonType": "object",
        "properties": {
          "is_close": {
            "bsonType": "bool",
            "description": "Est fermé",
          },
          "is_hq": {
            "bsonType": "bool",
            "description": "Siège social",
          },
          "nom": {
            "bsonType": "string",
            "description": "Nom de l'établissement",
          },
          "siret": {
            "bsonType": "string",
            "description": "Siret actif de l'établissement",
          },
        },
      },
    },
    "nom": {
      "bsonType": "string",
      "description": "Nom de l'organisation",
    },
    "siren": {
      "bsonType": "string",
      "description": "Siren de l'organisation",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
  ],
}
`;

exports[`zodToMongoSchema > should convert persons schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Métadonnées",
      "properties": {
        "sources": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
      },
    },
    "civility": {
      "bsonType": "string",
      "description": "civilité",
      "enum": [
        "Madame",
        "Monsieur",
      ],
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "Email de la personne",
    },
    "nom": {
      "bsonType": "string",
      "description": "Le nom de la personne",
    },
    "organisations": {
      "bsonType": "array",
      "description": "Liste des organisations",
      "items": {
        "bsonType": "string",
        "description": "Identifiant de l'organisation",
      },
    },
    "prenom": {
      "bsonType": "string",
      "description": "Le prénom de la personne",
    },
    "sirets": {
      "bsonType": "array",
      "description": "Liste de sirets recensé (sécurisation qualité de la donnée)",
      "items": {
        "bsonType": "string",
      },
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "organisations",
  ],
}
`;

exports[`zodToMongoSchema > should convert sessions schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "expires_at": {
      "bsonType": "date",
      "description": "Date d'expiration",
    },
    "token": {
      "bsonType": "string",
      "description": "Token de la session",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "token",
    "updated_at",
    "created_at",
    "expires_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert users schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "api_key": {
      "bsonType": "string",
      "description": "Clé API",
    },
    "api_key_used_at": {
      "anyOf": [
        {
          "bsonType": "date",
        },
        {
          "bsonType": "null",
        },
      ],
      "description": "Date de dernière utilisation de la clé API",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "Email de l'utilisateur",
    },
    "is_admin": {
      "bsonType": "bool",
      "description": "Est administrateur",
    },
    "password": {
      "bsonType": "string",
      "description": "Mot de passe de l'utilisateur",
    },
    "person_id": {
      "bsonType": "string",
      "description": "Identifiant de la personne",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "password",
    "person_id",
  ],
}
`;

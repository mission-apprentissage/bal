// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zodToMongoSchema > should convert documents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "added_by": {
      "bsonType": "string",
      "description": "Qui a ajouté le fichier",
    },
    "chemin_fichier": {
      "bsonType": "string",
      "description": "Chemin du fichier binaire",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "ext_fichier": {
      "bsonType": "string",
      "description": "Le type de fichier extension",
    },
    "hash_fichier": {
      "bsonType": "string",
      "description": "Checksum fichier",
    },
    "hash_secret": {
      "bsonType": "string",
      "description": "Hash fichier",
    },
    "nom_fichier": {
      "bsonType": "string",
      "description": "Le nom de fichier",
    },
    "taille_fichier": {
      "bsonType": "int",
      "description": "Taille du fichier en bytes",
    },
    "type_document": {
      "bsonType": "string",
      "description": "Le type de document (exemple: DECA, etc..)",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "type_document",
    "ext_fichier",
    "nom_fichier",
    "chemin_fichier",
    "taille_fichier",
    "hash_secret",
    "hash_fichier",
    "added_by",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert jobs schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "cron_string": {
      "bsonType": "string",
      "description": "standard cron string exemple: '*/2 * * * *'",
    },
    "ended_at": {
      "bsonType": "date",
      "description": "Date de fin d'execution",
    },
    "name": {
      "bsonType": "string",
      "description": "Le nom de la tâche",
    },
    "output": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Les valeurs de retours du job",
    },
    "payload": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "La donnée liéé à la tâche",
    },
    "scheduled_for": {
      "bsonType": "date",
      "description": "Date de lancement programmée",
    },
    "started_at": {
      "bsonType": "date",
      "description": "Date de lancement",
    },
    "status": {
      "bsonType": "string",
      "description": "Statut courant du job",
      "enum": [
        "pending",
        "will_start",
        "running",
        "finished",
        "blocked",
        "errored",
      ],
    },
    "sync": {
      "bsonType": "bool",
      "description": "Si le job est synchrone",
    },
    "type": {
      "bsonType": "string",
      "description": "Type du job simple ou cron",
      "enum": [
        "simple",
        "cron",
        "cron_task",
      ],
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "name",
    "type",
    "status",
    "scheduled_for",
  ],
}
`;

exports[`zodToMongoSchema > should convert sessions schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "token": {
      "bsonType": "string",
      "description": "Token de la session",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "token",
  ],
}
`;

exports[`zodToMongoSchema > should convert users schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "api_key": {
      "bsonType": "string",
      "description": "Clé API",
    },
    "api_key_used_at": {
      "anyOf": [
        {
          "bsonType": "date",
        },
        {
          "bsonType": "null",
        },
      ],
      "description": "Date de dernière utilisation de la clé API",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "Email de l'utilisateur",
    },
    "is_admin": {
      "bsonType": "bool",
      "description": "Est administrateur",
    },
    "password": {
      "bsonType": "string",
      "description": "Mot de passe de l'utilisateur",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "password",
  ],
}
`;

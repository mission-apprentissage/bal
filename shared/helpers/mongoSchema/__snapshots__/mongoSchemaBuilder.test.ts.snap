// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zodToMongoSchema > should convert anonymized.deca schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "date_debut_contrat": {
      "bsonType": "date",
    },
    "date_effet_avenant": {
      "bsonType": "date",
    },
    "date_effet_rupture": {
      "bsonType": "date",
    },
    "date_fin_contrat": {
      "bsonType": "date",
    },
    "date_suppression": {
      "bsonType": "date",
    },
    "dispositif": {
      "bsonType": "string",
    },
    "employeur": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "adresse": {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "code_postal": {
              "bsonType": "string",
            },
          },
          "required": [
            "code_postal",
          ],
        },
        "code_idcc": {
          "bsonType": "string",
        },
        "denomination": {
          "bsonType": "string",
        },
        "naf": {
          "bsonType": "string",
        },
        "nombre_de_salaries": {
          "bsonType": [
            "number",
            "null",
          ],
        },
        "siret": {
          "bsonType": "string",
        },
      },
    },
    "employeur_specifique": {
      "bsonType": "number",
    },
    "etablissement_formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "siret": {
          "bsonType": "string",
          "pattern": "^\\d{14}$",
        },
      },
    },
    "flag_correction": {
      "bsonType": "bool",
    },
    "formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "code_diplome": {
          "bsonType": "string",
        },
        "date_debut_formation": {
          "bsonType": "date",
        },
        "date_fin_formation": {
          "bsonType": "date",
        },
        "intitule_ou_qualification": {
          "bsonType": "string",
        },
        "rncp": {
          "bsonType": "string",
        },
        "type_diplome": {
          "bsonType": "string",
        },
      },
    },
    "no_avenant": {
      "bsonType": "string",
    },
    "no_contrat": {
      "bsonType": "string",
    },
    "organisme_formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "siret": {
          "bsonType": "string",
        },
        "uai_cfa": {
          "bsonType": "string",
        },
      },
    },
    "rupture_avant_debut": {
      "bsonType": "bool",
    },
    "statut": {
      "bsonType": "string",
    },
    "type_contrat": {
      "bsonType": "string",
    },
    "type_derogation": {
      "bsonType": "number",
    },
    "type_employeur": {
      "bsonType": "number",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "no_contrat",
    "date_debut_contrat",
    "date_fin_contrat",
    "formation",
    "updated_at",
    "created_at",
    "employeur",
  ],
}
`;

exports[`zodToMongoSchema > should convert bouncer.domain schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "domain": {
      "bsonType": "string",
    },
    "ping": {
      "anyOf": [
        {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "message": {
              "bsonType": "string",
            },
            "responseCode": {
              "bsonType": [
                "string",
                "null",
              ],
            },
            "responseMessage": {
              "bsonType": [
                "string",
                "null",
              ],
            },
            "status": {
              "bsonType": "string",
              "enum": [
                "valid",
                "invalid",
                "not_supported",
                "error",
              ],
            },
          },
          "required": [
            "status",
            "message",
            "responseCode",
            "responseMessage",
          ],
        },
        {
          "bsonType": "null",
        },
      ],
    },
    "smtp": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "domain",
    "smtp",
    "ping",
    "updated_at",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert bouncer.email schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "domain": {
      "bsonType": [
        "string",
        "null",
      ],
    },
    "email": {
      "bsonType": "string",
    },
    "ping": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "message": {
          "bsonType": "string",
        },
        "responseCode": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "responseMessage": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "status": {
          "bsonType": "string",
          "enum": [
            "valid",
            "invalid",
            "not_supported",
            "error",
          ],
        },
      },
      "required": [
        "status",
        "message",
        "responseCode",
        "responseMessage",
      ],
    },
    "smtp": {
      "bsonType": [
        "string",
        "null",
      ],
    },
    "ttl": {
      "bsonType": [
        "date",
        "null",
      ],
    },
  },
  "required": [
    "_id",
    "email",
    "domain",
    "smtp",
    "ping",
    "created_at",
    "ttl",
  ],
}
`;

exports[`zodToMongoSchema > should convert catalogueEmailSirets schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "email": {
      "bsonType": "string",
      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
    },
    "siret": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "email",
    "siret",
  ],
}
`;

exports[`zodToMongoSchema > should convert deca schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "alternant": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "adresse": {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "code_postal": {
              "bsonType": "string",
            },
            "numero": {
              "bsonType": [
                "string",
                "null",
              ],
            },
            "voie": {
              "bsonType": "string",
            },
          },
        },
        "courriel": {
          "bsonType": "string",
        },
        "date_naissance": {
          "bsonType": "date",
        },
        "departement_naissance": {
          "bsonType": "string",
        },
        "derniere_classe": {
          "bsonType": [
            "number",
            "null",
          ],
        },
        "handicap": {
          "bsonType": "bool",
        },
        "nationalite": {
          "bsonType": "number",
        },
        "nom": {
          "bsonType": "string",
        },
        "prenom": {
          "bsonType": "string",
        },
        "sexe": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "telephone": {
          "bsonType": "string",
        },
      },
      "required": [
        "nom",
        "date_naissance",
      ],
    },
    "created_at": {
      "bsonType": "date",
    },
    "date_debut_contrat": {
      "bsonType": "date",
    },
    "date_effet_avenant": {
      "bsonType": "date",
    },
    "date_effet_rupture": {
      "bsonType": "date",
    },
    "date_fin_contrat": {
      "bsonType": "date",
    },
    "date_suppression": {
      "bsonType": "date",
    },
    "dispositif": {
      "bsonType": "string",
    },
    "employeur": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "adresse": {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "code_postal": {
              "bsonType": "string",
            },
          },
          "required": [
            "code_postal",
          ],
        },
        "code_idcc": {
          "bsonType": "string",
        },
        "courriel": {
          "bsonType": "string",
        },
        "denomination": {
          "bsonType": "string",
        },
        "naf": {
          "bsonType": "string",
        },
        "nombre_de_salaries": {
          "bsonType": [
            "number",
            "null",
          ],
        },
        "siret": {
          "bsonType": "string",
        },
        "telephone": {
          "bsonType": "string",
        },
      },
    },
    "employeur_specifique": {
      "bsonType": "number",
    },
    "etablissement_formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "siret": {
          "bsonType": "string",
          "pattern": "^\\d{14}$",
        },
      },
    },
    "flag_correction": {
      "bsonType": "bool",
    },
    "formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "code_diplome": {
          "bsonType": "string",
        },
        "date_debut_formation": {
          "bsonType": "date",
        },
        "date_fin_formation": {
          "bsonType": "date",
        },
        "intitule_ou_qualification": {
          "bsonType": "string",
        },
        "rncp": {
          "bsonType": "string",
        },
        "type_diplome": {
          "bsonType": "string",
        },
      },
    },
    "no_avenant": {
      "bsonType": "string",
    },
    "no_contrat": {
      "bsonType": "string",
    },
    "organisme_formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "siret": {
          "bsonType": "string",
        },
        "uai_cfa": {
          "bsonType": "string",
        },
      },
    },
    "rupture_avant_debut": {
      "bsonType": "bool",
    },
    "statut": {
      "bsonType": "string",
    },
    "type_contrat": {
      "bsonType": "string",
    },
    "type_derogation": {
      "bsonType": "number",
    },
    "type_employeur": {
      "bsonType": "number",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "no_contrat",
    "date_debut_contrat",
    "date_fin_contrat",
    "alternant",
    "formation",
    "employeur",
    "updated_at",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert deca.import.job.result schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "has_completed": {
      "bsonType": "bool",
    },
    "import_date": {
      "bsonType": "date",
    },
    "import_date_string": {
      "bsonType": "string",
    },
  },
  "required": [
    "_id",
    "import_date_string",
    "import_date",
    "has_completed",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert decaHistory schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "deca_id": {
      "bsonType": "objectId",
    },
    "from": {},
    "key": {
      "bsonType": "string",
    },
    "time": {
      "bsonType": "date",
    },
    "to": {},
  },
  "required": [
    "_id",
    "key",
    "deca_id",
    "time",
  ],
}
`;

exports[`zodToMongoSchema > should convert documentContents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "content": {
      "additionalProperties": true,
      "bsonType": "object",
    },
    "created_at": {
      "bsonType": "date",
    },
    "document_id": {
      "bsonType": "string",
    },
    "type_document": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "document_id",
  ],
}
`;

exports[`zodToMongoSchema > should convert documents schema 1`] = `
{
  "anyOf": [
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
        },
        "added_by": {
          "bsonType": "string",
        },
        "chemin_fichier": {
          "bsonType": "string",
        },
        "columns": {
          "anyOf": [
            {
              "bsonType": "array",
              "items": {
                "bsonType": "string",
              },
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "created_at": {
          "bsonType": "date",
        },
        "delimiter": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "ext_fichier": {
          "bsonType": "string",
          "enum": [
            "xlsx",
            "xls",
            "csv",
          ],
        },
        "hash_fichier": {
          "bsonType": "string",
        },
        "hash_secret": {
          "bsonType": "string",
        },
        "import_progress": {
          "bsonType": [
            "number",
            "null",
          ],
        },
        "job_error": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "job_id": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "job_status": {
          "bsonType": "string",
          "enum": [
            "pending",
            "paused",
            "importing",
            "done",
            "error",
          ],
        },
        "kind": {
          "bsonType": "string",
          "enum": [
            "upload",
          ],
        },
        "lines_count": {
          "anyOf": [
            {
              "bsonType": "int",
              "maximum": 9007199254740991,
              "minimum": -9007199254740991,
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "nom_fichier": {
          "bsonType": "string",
        },
        "taille_fichier": {
          "bsonType": "int",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991,
        },
        "type_document": {
          "bsonType": "string",
        },
        "updated_at": {
          "bsonType": [
            "date",
            "null",
          ],
        },
      },
      "required": [
        "_id",
        "kind",
        "type_document",
        "ext_fichier",
        "nom_fichier",
        "chemin_fichier",
        "taille_fichier",
        "hash_secret",
        "hash_fichier",
        "added_by",
        "created_at",
        "job_status",
      ],
    },
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
        },
        "added_by": {
          "bsonType": "string",
        },
        "chemin_fichier": {
          "bsonType": "string",
        },
        "created_at": {
          "bsonType": "date",
        },
        "ext_fichier": {
          "bsonType": "string",
          "enum": [
            "xlsx",
            "xls",
            "csv",
          ],
        },
        "hash_fichier": {
          "bsonType": "string",
        },
        "hash_secret": {
          "bsonType": "string",
        },
        "job_id": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "job_status": {
          "bsonType": "string",
          "enum": [
            "pending",
            "paused",
            "processing",
            "done",
            "error",
          ],
        },
        "kind": {
          "bsonType": "string",
          "enum": [
            "mailingList",
          ],
        },
        "lines_count": {
          "bsonType": "int",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991,
        },
        "nom_fichier": {
          "bsonType": "string",
        },
        "process_progress": {
          "bsonType": "number",
        },
        "taille_fichier": {
          "bsonType": "int",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991,
        },
        "type_document": {
          "bsonType": "string",
        },
        "updated_at": {
          "bsonType": "date",
        },
      },
      "required": [
        "_id",
        "kind",
        "type_document",
        "ext_fichier",
        "nom_fichier",
        "chemin_fichier",
        "taille_fichier",
        "hash_secret",
        "hash_fichier",
        "added_by",
        "created_at",
        "job_status",
      ],
    },
  ],
}
`;

exports[`zodToMongoSchema > should convert emailDenied schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "email": {
      "bsonType": "string",
    },
    "reason": {
      "bsonType": "string",
      "enum": [
        "unsubscribe",
      ],
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "email",
    "reason",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert events schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "delivered_at": {
      "bsonType": [
        "date",
        "null",
      ],
    },
    "errors": {
      "bsonType": "array",
      "items": {
        "additionalProperties": false,
        "bsonType": "object",
        "properties": {
          "message": {
            "bsonType": "string",
          },
          "type": {
            "bsonType": "string",
            "enum": [
              "fatal",
              "soft_bounce",
              "hard_bounce",
              "complaint",
              "invalid_email",
              "blocked",
              "error",
            ],
          },
        },
      },
    },
    "messageId": {
      "bsonType": [
        "string",
        "null",
      ],
    },
    "opened_at": {
      "bsonType": [
        "date",
        "null",
      ],
    },
    "person_id": {
      "bsonType": "string",
    },
    "template": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "civility": {
          "anyOf": [
            {
              "bsonType": "string",
              "enum": [
                "Madame",
                "Monsieur",
              ],
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "name": {
          "bsonType": "string",
          "enum": [
            "reset_password",
          ],
        },
        "nom": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "prenom": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "resetPasswordToken": {
          "bsonType": "string",
        },
        "to": {
          "bsonType": "string",
          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
        },
      },
      "required": [
        "name",
        "to",
        "resetPasswordToken",
      ],
    },
    "type": {
      "bsonType": "string",
      "enum": [
        "email.bal",
      ],
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "type",
    "person_id",
    "template",
    "created_at",
    "updated_at",
    "opened_at",
    "delivered_at",
    "messageId",
    "errors",
  ],
}
`;

exports[`zodToMongoSchema > should convert lba.emailblacklists schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "blacklisting_origin": {
      "bsonType": "string",
    },
    "created_at": {
      "bsonType": "date",
    },
    "email": {
      "bsonType": "string",
      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "email",
    "blacklisting_origin",
    "created_at",
    "updated_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert lba.recruteurs.siret.email schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "email": {
      "bsonType": "string",
    },
    "siret": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "siret",
    "email",
    "created_at",
    "updated_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert mailingList.computed schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "data": {
      "additionalProperties": {
        "bsonType": "string",
      },
      "bsonType": "object",
    },
    "email": {
      "bsonType": "string",
    },
    "email_status": {
      "bsonType": "string",
      "enum": [
        "empty",
        "invalid",
        "blacklisted",
        "valid",
      ],
    },
    "line_number": {
      "bsonType": "number",
    },
    "mailing_list_id": {
      "bsonType": "objectId",
    },
    "ttl": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "mailing_list_id",
    "line_number",
    "email",
    "data",
    "email_status",
    "ttl",
  ],
}
`;

exports[`zodToMongoSchema > should convert mailingList.source schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "data": {
      "additionalProperties": {
        "bsonType": "string",
      },
      "bsonType": "object",
    },
    "line_number": {
      "bsonType": "number",
    },
    "mailing_list_id": {
      "bsonType": "objectId",
    },
    "ttl": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "mailing_list_id",
    "line_number",
    "data",
    "ttl",
  ],
}
`;

exports[`zodToMongoSchema > should convert mailingLists schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "added_by": {
      "bsonType": "string",
    },
    "campaign_name": {
      "bsonType": "string",
    },
    "created_at": {
      "bsonType": "date",
    },
    "document_id": {
      "bsonType": "string",
    },
    "email": {
      "bsonType": "string",
    },
    "identifier_columns": {
      "bsonType": "array",
      "items": {
        "bsonType": "string",
      },
    },
    "output_columns": {
      "bsonType": "array",
      "items": {
        "additionalProperties": false,
        "bsonType": "object",
        "properties": {
          "column": {
            "bsonType": "string",
          },
          "output": {
            "bsonType": "string",
          },
          "simple": {
            "bsonType": "bool",
          },
        },
        "required": [
          "column",
          "output",
          "simple",
        ],
      },
    },
    "secondary_email": {
      "bsonType": "string",
    },
    "source": {
      "bsonType": "string",
    },
    "training_columns": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "cfd": {
          "bsonType": "string",
        },
        "cle_ministere_educatif": {
          "bsonType": "string",
        },
        "code_insee": {
          "bsonType": "string",
        },
        "code_postal": {
          "bsonType": "string",
        },
        "mef": {
          "bsonType": "string",
        },
        "rncp": {
          "bsonType": "string",
        },
        "uai_formateur": {
          "bsonType": "string",
        },
        "uai_formateur_responsable": {
          "bsonType": "string",
        },
        "uai_lieu_formation": {
          "bsonType": "string",
        },
      },
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "campaign_name",
    "source",
    "email",
    "identifier_columns",
    "output_columns",
    "training_columns",
    "added_by",
    "updated_at",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert mailingListsV2 schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "added_by": {
      "bsonType": "objectId",
    },
    "config": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "email_column": {
          "bsonType": "string",
        },
        "lba_columns": {
          "anyOf": [
            {
              "additionalProperties": false,
              "bsonType": "object",
              "properties": {
                "cfd": {
                  "bsonType": "string",
                },
                "cle_ministere_educatif": {
                  "bsonType": "string",
                },
                "code_insee": {
                  "bsonType": "string",
                },
                "code_postal": {
                  "bsonType": "string",
                },
                "mef": {
                  "bsonType": "string",
                },
                "rncp": {
                  "bsonType": "string",
                },
                "uai_formateur": {
                  "bsonType": "string",
                },
                "uai_formateur_responsable": {
                  "bsonType": "string",
                },
                "uai_lieu_formation": {
                  "bsonType": "string",
                },
              },
              "required": [
                "cle_ministere_educatif",
                "mef",
                "cfd",
                "rncp",
                "code_postal",
                "uai_lieu_formation",
                "uai_formateur",
                "uai_formateur_responsable",
                "code_insee",
              ],
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "output_columns": {
          "bsonType": "array",
          "items": {
            "additionalProperties": false,
            "bsonType": "object",
            "properties": {
              "input": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "bsonType": "object",
                    "properties": {
                      "name": {
                        "bsonType": "string",
                      },
                      "type": {
                        "bsonType": "string",
                        "enum": [
                          "source",
                        ],
                      },
                    },
                    "required": [
                      "type",
                      "name",
                    ],
                  },
                  {
                    "additionalProperties": false,
                    "bsonType": "object",
                    "properties": {
                      "name": {
                        "bsonType": "string",
                        "enum": [
                          "WEBHOOK_LBA",
                          "BOUNCER",
                        ],
                      },
                      "type": {
                        "bsonType": "string",
                        "enum": [
                          "computed",
                        ],
                      },
                    },
                    "required": [
                      "type",
                      "name",
                    ],
                  },
                ],
              },
              "output": {
                "bsonType": "string",
              },
              "simple": {
                "bsonType": "bool",
              },
            },
            "required": [
              "input",
              "output",
              "simple",
            ],
          },
        },
      },
      "required": [
        "email_column",
        "output_columns",
        "lba_columns",
      ],
    },
    "created_at": {
      "bsonType": "date",
    },
    "encode_key": {
      "bsonType": "string",
    },
    "error": {
      "bsonType": [
        "string",
        "null",
      ],
    },
    "eta": {
      "bsonType": [
        "date",
        "null",
      ],
    },
    "job_id": {
      "bsonType": [
        "objectId",
        "null",
      ],
    },
    "name": {
      "bsonType": "string",
    },
    "output": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "blacklisted_email_count": {
          "bsonType": "number",
        },
        "empty_source_lines": {
          "bsonType": "number",
        },
        "invalid_email_count": {
          "bsonType": "number",
        },
        "lines": {
          "bsonType": "number",
        },
      },
      "required": [
        "lines",
        "empty_source_lines",
        "blacklisted_email_count",
        "invalid_email_count",
      ],
    },
    "progress": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "export": {
          "bsonType": "int",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991,
        },
        "generate": {
          "bsonType": "int",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991,
        },
        "parse": {
          "bsonType": "int",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991,
        },
      },
      "required": [
        "parse",
        "generate",
        "export",
      ],
    },
    "source": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "columns": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
        "file": {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "delimiter": {
              "bsonType": "string",
            },
            "encoding": {
              "bsonType": "string",
            },
            "hash_fichier": {
              "bsonType": "string",
            },
            "size": {
              "bsonType": "number",
            },
          },
          "required": [
            "hash_fichier",
            "delimiter",
            "size",
            "encoding",
          ],
        },
        "lines": {
          "bsonType": "number",
        },
      },
      "required": [
        "file",
        "lines",
        "columns",
      ],
    },
    "status": {
      "bsonType": "string",
      "enum": [
        "initial",
        "parse:scheduled",
        "parse:in_progress",
        "parse:failure",
        "parse:success",
        "generate:scheduled",
        "generate:in_progress",
        "generate:failure",
        "generate:success",
        "export:scheduled",
        "export:in_progress",
        "export:failure",
        "export:success",
      ],
    },
    "ttl": {
      "bsonType": "date",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "name",
    "source",
    "config",
    "status",
    "error",
    "eta",
    "progress",
    "output",
    "job_id",
    "ttl",
    "encode_key",
    "added_by",
    "updated_at",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert organisations schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "properties": {
        "sources": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
      },
    },
    "created_at": {
      "bsonType": "date",
    },
    "email_domains": {
      "bsonType": "array",
      "items": {
        "bsonType": "string",
      },
    },
    "etablissements": {
      "bsonType": "array",
      "items": {
        "additionalProperties": false,
        "bsonType": "object",
        "properties": {
          "is_close": {
            "bsonType": "bool",
          },
          "is_hq": {
            "bsonType": "bool",
          },
          "nom": {
            "bsonType": "string",
          },
          "siret": {
            "bsonType": "string",
          },
        },
      },
    },
    "nom": {
      "bsonType": "string",
    },
    "siren": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
  ],
}
`;

exports[`zodToMongoSchema > should convert persons schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "properties": {
        "sources": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
      },
    },
    "civility": {
      "bsonType": "string",
      "enum": [
        "Madame",
        "Monsieur",
      ],
    },
    "created_at": {
      "bsonType": "date",
    },
    "email": {
      "bsonType": "string",
    },
    "nom": {
      "bsonType": "string",
    },
    "organisations": {
      "bsonType": "array",
      "items": {
        "bsonType": "string",
      },
    },
    "prenom": {
      "bsonType": "string",
    },
    "sirets": {
      "bsonType": "array",
      "items": {
        "bsonType": "string",
      },
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "email",
    "organisations",
  ],
}
`;

exports[`zodToMongoSchema > should convert sessions schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "created_at": {
      "bsonType": "date",
    },
    "expires_at": {
      "bsonType": "date",
    },
    "token": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "token",
    "updated_at",
    "created_at",
    "expires_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert users schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
    },
    "api_key": {
      "bsonType": "string",
    },
    "api_key_used_at": {
      "bsonType": [
        "date",
        "null",
      ],
    },
    "created_at": {
      "bsonType": "date",
    },
    "email": {
      "bsonType": "string",
      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
    },
    "is_admin": {
      "bsonType": "bool",
    },
    "is_support": {
      "bsonType": "bool",
    },
    "password": {
      "bsonType": "string",
    },
    "person_id": {
      "bsonType": "string",
    },
    "updated_at": {
      "bsonType": "date",
    },
  },
  "required": [
    "_id",
    "email",
    "password",
    "person_id",
  ],
}
`;

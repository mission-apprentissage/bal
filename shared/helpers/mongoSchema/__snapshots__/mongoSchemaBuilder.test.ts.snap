// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zodToMongoSchema > should convert deca schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "alternant": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "adresse": {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "code_postal": {
              "bsonType": "string",
              "description": "Le code postal de l'adresse",
            },
            "numero": {
              "bsonType": "number",
              "description": "Le numéro de l'adresse",
            },
            "voie": {
              "bsonType": "string",
              "description": "La voie de l'adresse",
            },
          },
        },
        "courriel": {
          "bsonType": "string",
          "description": "L'adresse email de l'alternant",
        },
        "date_naissance": {
          "bsonType": "date",
          "description": "La date de naissance de l'alternant",
        },
        "departement_naissance": {
          "bsonType": "string",
          "description": "Le département de naissance de l'alternant",
        },
        "derniere_classe": {
          "bsonType": "string",
          "description": "La dernière classe de l'apprenant",
        },
        "handicap": {
          "bsonType": "bool",
          "description": "Indique si l'alternant est identifié comme porteur d'un handicap",
        },
        "nationalite": {
          "bsonType": "number",
          "description": "Le code de la nationalité de l'alternant",
        },
        "nom": {
          "bsonType": "string",
          "description": "Le nom de l'alternant",
        },
        "prenom": {
          "bsonType": "string",
          "description": "Le prenom de l'alternant",
        },
        "sexe": {
          "bsonType": "string",
          "description": "Le sexe de l'alternant",
        },
        "telephone": {
          "bsonType": "string",
          "description": "Le numéro de téléphone de l'alternant",
        },
      },
      "required": [
        "nom",
        "prenom",
        "sexe",
        "date_naissance",
        "departement_naissance",
      ],
    },
    "columns": {
      "bsonType": "array",
      "description": "TEST ARRAY ",
      "items": {
        "bsonType": "string",
      },
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "date_debut_contrat": {
      "bsonType": "date",
      "description": "La date de début du contrat",
    },
    "date_effet_avenant": {
      "bsonType": "date",
      "description": "La date d'effet de l'avenant du contrat",
    },
    "date_effet_rupture": {
      "bsonType": "date",
      "description": "La date d'effet de la rupture",
    },
    "date_fin_contrat": {
      "bsonType": "date",
      "description": "La date de fin du contrat",
    },
    "date_suppression": {
      "bsonType": "date",
      "description": "La date de suppression ?",
    },
    "dispositif": {
      "bsonType": "string",
      "description": "dispositif",
    },
    "employeur": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "adresse": {
          "additionalProperties": false,
          "bsonType": "object",
          "properties": {
            "code_postal": {
              "bsonType": "string",
              "description": "Le code postal de l'adresse",
            },
          },
          "required": [
            "code_postal",
          ],
        },
        "code_idcc": {
          "bsonType": "string",
          "description": "Le code IDCC de l'employeur",
        },
        "courriel": {
          "bsonType": "string",
          "description": "Email de l’employeur",
        },
        "denomination": {
          "bsonType": "string",
          "description": "Denomination de l'employeur",
        },
        "naf": {
          "bsonType": "string",
          "description": "Code NAF de l’entreprise",
        },
        "nombre_de_salaries": {
          "bsonType": "number",
          "description": "Effectif salarié de l'entreprise",
        },
        "siret": {
          "bsonType": "string",
          "description": "N° SIRET de l'employeur",
        },
        "telephone": {
          "bsonType": "string",
          "description": "Téléphone de l'employeur",
        },
      },
    },
    "etablissement_formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "siret": {
          "bsonType": "string",
          "description": "Le siret de l'établissement de la formation",
          "pattern": "^[0-9]{14}$",
        },
      },
    },
    "flag_correction": {
      "bsonType": "bool",
      "description": "Flag correction",
    },
    "formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "code_diplome": {
          "bsonType": "string",
          "description": "Le code diplôme de la formation",
        },
        "date_debut_formation": {
          "bsonType": "date",
          "description": "La date de début de la formation",
        },
        "date_fin_formation": {
          "bsonType": "date",
          "description": "La date de fin de la formation",
        },
        "intitule_ou_qualification": {
          "bsonType": "string",
          "description": "L'adresse email de l'alternant",
        },
        "rncp": {
          "bsonType": "string",
          "description": "Le code RNCP de la formation",
        },
        "type_diplome": {
          "bsonType": "string",
          "description": "Catégorie par niveau du Diplôme ou titre visé par l'Alternant",
        },
      },
    },
    "no_avenant": {
      "bsonType": "string",
      "description": "Le numéro de l'avenant du contrat",
    },
    "no_contrat": {
      "bsonType": "string",
      "description": "Le numéro du contrat",
    },
    "organisme_formation": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "siret": {
          "bsonType": "string",
          "description": "Le SIRET de l'organisme de formation principal",
        },
        "uai_cfa": {
          "bsonType": "string",
          "description": "L'UAI de l'organisme responsable",
        },
      },
    },
    "rupture_avant_debut": {
      "bsonType": "bool",
      "description": "rupture_avant_debut",
    },
    "statut": {
      "bsonType": "string",
      "description": "Le statut du contrat",
    },
    "type_contrat": {
      "bsonType": "string",
      "description": "Le type de contrat ou avenant doit correspondre à la situation du contrat (premier contrat, succession de contrats, avenants).",
      "enum": [
        "11",
        "21",
        "22",
        "23",
        "31",
        "32",
        "33",
        "34",
        "35",
        "36",
        "37",
        "38",
      ],
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "no_contrat",
    "date_debut_contrat",
    "date_fin_contrat",
    "alternant",
    "formation",
    "organisme_formation",
    "employeur",
  ],
}
`;

exports[`zodToMongoSchema > should convert decaHistory schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "docId": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "from": {
      "bsonType": "string",
      "description": "Value from",
    },
    "key": {
      "bsonType": "string",
      "description": "Modified key",
    },
    "resumeToken": {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_data": {
          "bsonType": "string",
          "description": "Resume token",
        },
      },
      "required": [
        "_data",
      ],
    },
    "time": {
      "bsonType": "date",
      "description": "Modified time",
    },
    "to": {
      "bsonType": "string",
      "description": "Value to",
    },
  },
  "required": [
    "_id",
    "key",
    "from",
    "to",
    "resumeToken",
    "docId",
    "time",
  ],
}
`;

exports[`zodToMongoSchema > should convert documentContents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "content": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Contenu du document",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "document_id": {
      "bsonType": "string",
      "description": "Identifiant du document",
    },
    "type_document": {
      "bsonType": "string",
      "description": "Le type de document (exemple: DECA, etc..)",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "document_id",
  ],
}
`;

exports[`zodToMongoSchema > should convert documents schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "added_by": {
      "bsonType": "string",
      "description": "Qui a ajouté le fichier",
    },
    "chemin_fichier": {
      "bsonType": "string",
      "description": "Chemin du fichier binaire",
    },
    "columns": {
      "bsonType": "array",
      "description": "Liste des colonnes",
      "items": {
        "bsonType": "string",
      },
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "delimiter": {
      "bsonType": "string",
      "description": "Délimiteur",
    },
    "ext_fichier": {
      "bsonType": "string",
      "description": "Le type de fichier extension",
      "enum": [
        "xlsx",
        "xls",
        "csv",
      ],
    },
    "hash_fichier": {
      "bsonType": "string",
      "description": "Checksum fichier",
    },
    "hash_secret": {
      "bsonType": "string",
      "description": "Hash fichier",
    },
    "import_progress": {
      "bsonType": "number",
      "description": "Progress percentage (-1 not started)",
    },
    "lines_count": {
      "bsonType": "int",
      "description": "Number of lines",
    },
    "nom_fichier": {
      "bsonType": "string",
      "description": "Le nom de fichier",
    },
    "taille_fichier": {
      "bsonType": "int",
      "description": "Taille du fichier en bytes",
    },
    "type_document": {
      "bsonType": "string",
      "description": "Le type de document (exemple: DECA, etc..)",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "type_document",
    "ext_fichier",
    "nom_fichier",
    "chemin_fichier",
    "taille_fichier",
    "hash_secret",
    "hash_fichier",
    "added_by",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert emailDenied schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "L'email rejetée",
    },
    "reason": {
      "bsonType": "string",
      "enum": [
        "unsubscribe",
      ],
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "reason",
    "created_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert events schema 1`] = `
{
  "anyOf": [
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
          "description": "Identifiant unique",
        },
        "created_at": {
          "bsonType": "date",
        },
        "delivered_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "errors": {
          "bsonType": "array",
          "items": {
            "additionalProperties": false,
            "bsonType": "object",
            "properties": {
              "message": {
                "bsonType": "string",
              },
              "type": {
                "bsonType": "string",
                "enum": [
                  "fatal",
                  "soft_bounce",
                  "hard_bounce",
                  "complaint",
                  "invalid_email",
                  "blocked",
                  "error",
                ],
              },
            },
          },
        },
        "messageId": {
          "bsonType": [
            "string",
            "null",
          ],
        },
        "opened_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
        },
        "person_id": {
          "bsonType": "string",
          "description": "Identifiant de la personne",
        },
        "template": {
          "anyOf": [
            {
              "additionalProperties": false,
              "bsonType": "object",
              "properties": {
                "civility": {
                  "anyOf": [
                    {
                      "bsonType": "string",
                      "enum": [
                        "Madame",
                        "Monsieur",
                      ],
                    },
                    {
                      "bsonType": "null",
                    },
                  ],
                },
                "name": {
                  "bsonType": "string",
                },
                "nom": {
                  "bsonType": [
                    "string",
                    "null",
                  ],
                },
                "prenom": {
                  "bsonType": [
                    "string",
                    "null",
                  ],
                },
                "resetPasswordToken": {
                  "bsonType": "string",
                },
                "to": {
                  "bsonType": "string",
                },
              },
              "required": [
                "name",
                "to",
                "resetPasswordToken",
              ],
            },
          ],
        },
        "type": {
          "bsonType": "string",
          "description": "Type de l'évènement",
        },
        "updated_at": {
          "bsonType": "date",
        },
      },
      "required": [
        "_id",
        "type",
        "person_id",
        "template",
        "created_at",
        "updated_at",
        "opened_at",
        "delivered_at",
        "messageId",
        "errors",
      ],
    },
  ],
}
`;

exports[`zodToMongoSchema > should convert jobs schema 1`] = `
{
  "anyOf": [
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
          "description": "Identifiant unique",
        },
        "created_at": {
          "bsonType": "date",
          "description": "Date d'ajout en base de données",
        },
        "ended_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Date de fin d'execution",
        },
        "name": {
          "bsonType": "string",
          "description": "Le nom de la tâche",
        },
        "output": {
          "anyOf": [
            {
              "additionalProperties": true,
              "bsonType": "object",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Les valeurs de retours du job",
        },
        "payload": {
          "anyOf": [
            {
              "additionalProperties": true,
              "bsonType": "object",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "La donnée liéé à la tâche",
        },
        "scheduled_for": {
          "bsonType": "date",
          "description": "Date de lancement programmée",
        },
        "started_at": {
          "anyOf": [
            {
              "bsonType": "date",
            },
            {
              "bsonType": "null",
            },
          ],
          "description": "Date de lancement",
        },
        "status": {
          "bsonType": "string",
          "description": "Statut courant du job",
          "enum": [
            "pending",
            "will_start",
            "running",
            "finished",
            "errored",
          ],
        },
        "sync": {
          "bsonType": "bool",
          "description": "Si le job est synchrone",
        },
        "type": {
          "bsonType": "string",
        },
        "updated_at": {
          "bsonType": "date",
          "description": "Date de mise à jour en base de données",
        },
      },
      "required": [
        "_id",
        "name",
        "type",
        "status",
        "sync",
        "scheduled_for",
        "updated_at",
        "created_at",
      ],
    },
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
          "description": "Identifiant unique",
        },
        "created_at": {
          "bsonType": "date",
          "description": "Date d'ajout en base de données",
        },
        "cron_string": {
          "bsonType": "string",
          "description": "standard cron string exemple: '*/2 * * * *'",
        },
        "name": {
          "bsonType": "string",
          "description": "Le nom de la tâche",
          "enum": [
            "Mise à jour des contrats deca",
          ],
        },
        "scheduled_for": {
          "bsonType": "date",
          "description": "Date de lancement programmée",
        },
        "status": {
          "bsonType": "string",
          "description": "Statut courant du cron",
          "enum": [
            "active",
          ],
        },
        "type": {
          "bsonType": "string",
        },
        "updated_at": {
          "bsonType": "date",
          "description": "Date de mise à jour en base de données",
        },
      },
      "required": [
        "_id",
        "name",
        "type",
        "status",
        "cron_string",
        "scheduled_for",
        "updated_at",
        "created_at",
      ],
    },
    {
      "additionalProperties": false,
      "bsonType": "object",
      "properties": {
        "_id": {
          "bsonType": "objectId",
          "description": "Identifiant unique",
        },
        "created_at": {
          "bsonType": "date",
          "description": "Date d'ajout en base de données",
        },
        "ended_at": {
          "bsonType": "date",
          "description": "Date de fin d'execution",
        },
        "name": {
          "bsonType": "string",
          "description": "Le nom de la tâche",
          "enum": [
            "Mise à jour des contrats deca",
          ],
        },
        "scheduled_for": {
          "bsonType": "date",
          "description": "Date de lancement programmée",
        },
        "started_at": {
          "bsonType": "date",
          "description": "Date de lancement",
        },
        "status": {
          "bsonType": "string",
          "description": "Statut courant du job",
          "enum": [
            "pending",
            "will_start",
            "running",
            "finished",
            "errored",
          ],
        },
        "type": {
          "bsonType": "string",
        },
        "updated_at": {
          "bsonType": "date",
          "description": "Date de mise à jour en base de données",
        },
      },
      "required": [
        "_id",
        "name",
        "type",
        "status",
        "scheduled_for",
        "updated_at",
        "created_at",
      ],
    },
  ],
}
`;

exports[`zodToMongoSchema > should convert organisations schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Métadonnées",
      "properties": {
        "sources": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
      },
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email_domains": {
      "bsonType": "array",
      "description": "Liste des domaines email",
      "items": {
        "bsonType": "string",
      },
    },
    "etablissements": {
      "bsonType": "array",
      "description": "Liste des établissements",
      "items": {
        "additionalProperties": false,
        "bsonType": "object",
        "properties": {
          "is_close": {
            "bsonType": "bool",
            "description": "Est fermé",
          },
          "is_hq": {
            "bsonType": "bool",
            "description": "Siège social",
          },
          "nom": {
            "bsonType": "string",
            "description": "Nom de l'établissement",
          },
          "siret": {
            "bsonType": "string",
            "description": "Siret actif de l'établissement",
          },
        },
      },
    },
    "nom": {
      "bsonType": "string",
      "description": "Nom de l'organisation",
    },
    "siren": {
      "bsonType": "string",
      "description": "Siren de l'organisation",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
  ],
}
`;

exports[`zodToMongoSchema > should convert persons schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "_meta": {
      "additionalProperties": true,
      "bsonType": "object",
      "description": "Métadonnées",
      "properties": {
        "sources": {
          "bsonType": "array",
          "items": {
            "bsonType": "string",
          },
        },
      },
    },
    "civility": {
      "bsonType": "string",
      "description": "civilité",
      "enum": [
        "Madame",
        "Monsieur",
      ],
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "Email de la personne",
    },
    "nom": {
      "bsonType": "string",
      "description": "Le nom de la personne",
    },
    "organisations": {
      "bsonType": "array",
      "description": "Liste des organisations",
      "items": {
        "bsonType": "string",
        "description": "Identifiant de l'organisation",
      },
    },
    "prenom": {
      "bsonType": "string",
      "description": "Le prénom de la personne",
    },
    "sirets": {
      "bsonType": "array",
      "description": "Liste de sirets recensé (sécurisation qualité de la donnée)",
      "items": {
        "bsonType": "string",
      },
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "organisations",
  ],
}
`;

exports[`zodToMongoSchema > should convert sessions schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "expires_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "token": {
      "bsonType": "string",
      "description": "Token de la session",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "token",
    "updated_at",
    "created_at",
    "expires_at",
  ],
}
`;

exports[`zodToMongoSchema > should convert users schema 1`] = `
{
  "additionalProperties": false,
  "bsonType": "object",
  "properties": {
    "_id": {
      "bsonType": "objectId",
      "description": "Identifiant unique",
    },
    "api_key": {
      "bsonType": "string",
      "description": "Clé API",
    },
    "api_key_used_at": {
      "anyOf": [
        {
          "bsonType": "date",
        },
        {
          "bsonType": "null",
        },
      ],
      "description": "Date de dernière utilisation de la clé API",
    },
    "created_at": {
      "bsonType": "date",
      "description": "Date d'ajout en base de données",
    },
    "email": {
      "bsonType": "string",
      "description": "Email de l'utilisateur",
    },
    "is_admin": {
      "bsonType": "bool",
      "description": "Est administrateur",
    },
    "password": {
      "bsonType": "string",
      "description": "Mot de passe de l'utilisateur",
    },
    "person_id": {
      "bsonType": "string",
      "description": "Identifiant de la personne",
    },
    "updated_at": {
      "bsonType": "date",
      "description": "Date de mise à jour en base de données",
    },
  },
  "required": [
    "_id",
    "email",
    "password",
    "person_id",
  ],
}
`;

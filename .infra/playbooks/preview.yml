---
- hosts: preview
  become: true
  gather_facts: false
  vars_files:
    - "../vault/vault.yml"
  tasks:
    - name: Get Pull Request Infos
      ansible.builtin.shell: curl -s https://api.github.com/repos/mission-apprentissage/bal/pulls/{{ pr_number }}
      register: result

    - name: Save Pull Requests Infos
      set_fact:
        pr_commit_id: "{{ result.stdout | from_json | json_query('head.sha') }}"
        pr_title: "{{ result.stdout | from_json | json_query('title') }}"
        pr_state: "{{ result.stdout | from_json | json_query('state') }}"

    - name: Deploying preview
      when: pr_state == 'open'
      block:
        - name: création du répertoire de build
          file:
            path: /opt/bal/projects/{{ pr_number }}
            state: directory
            owner: root
            group: root
            mode: 770

        - name: copy server env file
          ansible.builtin.copy:
            content: "{{ lookup('ansible.builtin.template', '../.env_server') }}"
            dest: "/opt/bal/projects/{{ pr_number }}/.env_server"

        - name: copy ui env file
          ansible.builtin.copy:
            content: "{{ lookup('ansible.builtin.template', '../.env_ui') }}"
            dest: "/opt/bal/projects/{{ pr_number }}/.env_ui"

        - name: creation du fichier docker compose
          ansible.builtin.template:
            src: "{{ item }}"
            dest: "/opt/bal/projects/{{ pr_number }}/docker-compose.yml"
          with_fileglob:
            - "../docker-compose.preview-app.yml"

        - name: "Clone du repository"
          git:
            repo: "git@github.com:mission-apprentissage/bal.git"
            version: "{{ pr_commit_id }}"
            force: yes
            accept_newhostkey: yes
            dest: /opt/bal/repository

        - name: Root only pour tous les répertoires applicatifs
          file:
            path: "{{item}}"
            state: directory
            owner: root
            group: root
            mode: 770
          with_items:
            - "/opt/bal/repository"

        - name: Bump version 0.0.0-{{ pr_number }}
          shell:
            cmd: "bash .infra/scripts/release/bump-version.sh 0.0.0-{{ pr_number }}"
            chdir: /opt/bal/repository

        - name: Build dependencies image
          shell:
            cmd: "make ci-install"
            chdir: /opt/bal/repository

        - name: Build local images 0.0.0-{{ pr_number }}
          shell:
            cmd: "bash .infra/scripts/release/build-images.sh 0.0.0-{{ pr_number }} ghcr.io"
            chdir: /opt/bal/repository

        - name: Start Application
          shell:
            chdir: "/opt/bal/projects/{{ pr_number }}"
            cmd: docker compose up -d --remove-orphans --wait

        - name: Trigger ACME companion
          shell:
            chdir: /opt/bal
            cmd: docker exec nginx-proxy-acme /app/signal_le_service

        - name: Execute MongoDB migrations
          shell:
            chdir: "/opt/bal/projects/{{ pr_number }}"
            cmd: "docker compose run --rm server yarn cli migrations:up"

        - name: Seed database
          shell:
            chdir: "/opt/bal/projects/{{ pr_number }}"
            cmd: "docker compose run --rm server yarn cli seed --sync"

        - name: "Preview URL"
          debug:
            msg: "https://{{ pr_number }}.bal-preview.apprentissage.beta.gouv.fr/"

    - name: Uninstalling preview
      when: pr_state != 'open'
      block:
        - name: Check if preview is deployed
          stat:
            path: "/opt/bal/projects/{{ pr_number }}"
          register: check_stat

        - name: Stopping the preview
          shell:
            chdir: "/opt/bal/projects/{{ pr_number }}"
            cmd: docker compose down --remove-orphans	--volumes
          when: check_stat.stat.exists

        - name: Removing server image
          shell:
            cmd: "docker image rm ghcr.io/mission-apprentissage/mna_bal_server:0.0.0-{{ pr_number }}"
          when: check_stat.stat.exists

        - name: Removing ui image
          shell:
            cmd: "docker image rm ghcr.io/mission-apprentissage/mna_bal_ui:0.0.0-{{ pr_number }}"
          when: check_stat.stat.exists

        - name: Remove database
          shell:
            cmd: docker run --rm -it --network bal_network mongo:6.0.2-focal mongosh "{{ vault[env_type].MNA_BAL_MONGODB_URI }}" --eval "db.dropDatabase()"

        - name: Removing preview directory
          shell:
            cmd: "rm -rf /opt/bal/projects/{{ pr_number }}"
          when: check_stat.stat.exists

    - name: Clean Docker
      shell: docker system prune --force --volumes

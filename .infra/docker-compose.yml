version: "3.8"

# The following variables define reusable configurations for deployment, providing consistent and predefined 
# behaviors for updating, rolling back, and restarting services.

x-deploy-default: &deploy-default
  update_config:
    failure_action: rollback
    parallelism: 1
    delay: 10s
  rollback_config:
    parallelism: 0
  restart_policy:
    window: 5s

x-default: &default
  networks:
    - bal_network


services:
  reverse_proxy:
    <<: *default
    image: "ghcr.io/mission-apprentissage/mna_bal_reverse_proxy:{{reverse_proxy_version}}"
    deploy:
      <<: *deploy-default
      resources:
        limits:
          memory: 256m
      replicas: 2
    ports:
      - "80:80"
      - "443:443"
    environment:
      - SERVER_NAME={{dns_name}}
      - NGINX_ALWAYS_TLS_REDIRECT=true
      - PROXY_SSL_CERT=/ssl/fullchain.pem
      - PROXY_SSL_CERT_KEY=/ssl/privkey.pem
      - PARANOIA=1
      - ANOMALY_INBOUND=5
      - ANOMALY_OUTBOUND=4
      - REPORTING_LEVEL=4
      - DNS_SERVER=127.0.0.11
      - PROXY=1
      - SERVERNAME=localhost
      - LOGLEVEL=warn
      - NGINX_ALWAYS_TLS_REDIRECT=false
      - ALLOWED_METHODS=GET HEAD POST OPTIONS PUT DELETE
    volumes:
      - /opt/bal/data/nginx:/data
      - /opt/bal/data/ssl:/ssl:ro
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.bal.{{env_type}}.nginx
        fluentd-async: "true"

  server:
    <<: *default
    image: "ghcr.io/mission-apprentissage/mna_bal_server:{{app_version}}"
    deploy:
      <<: *deploy-default
      resources:
        limits:
          memory: 1g
      replicas: 2
    env_file: .env_server
    volumes:
      - /opt/bal/data/server:/data
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.bal.{{env_type}}.server
        fluentd-async: "true"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000/api/healthcheck"]
      interval: 10s
      timeout: 30s
      retries: 11
      start_period: 10s

  processor:
    <<: *default
    image: "ghcr.io/mission-apprentissage/mna_bal_server:{{app_version}}"
    deploy:
      <<: *deploy-default
      resources:
        limits:
          memory: 1g
    command: ["yarn", "cli", "processor"]
    env_file: .env_server
    volumes:
      - /opt/bal/data/server:/data
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.bal.{{env_type}}.processor
        fluentd-async: "true"

  ui:
    <<: *default
    image: "ghcr.io/mission-apprentissage/mna_bal_ui:{{app_version}}-{{env_type}}"
    deploy:
      <<: *deploy-default
      resources:
        limits:
          memory: 256m
      replicas: 2
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.bal.{{env_type}}.ui
        fluentd-async: "true"

  metabase:
    <<: *default
    image: metabase/metabase:v0.46.6.1
    deploy:
      <<: *deploy-default
      resources:
        limits:
          memory: 2g
    environment:
      JAVA_TIMEZONE: Europe/Paris
      MB_SITE_LOCALE: fr
      MB_SITE_URL: {{dns_name}}/metabase
      MB_DB_TYPE: postgres
      MB_DB_CONNECTION_URI: {{vault[env_type].BAL_METABASE_DB_URI}}
      MB_ENCRYPTION_SECRET_KEY: {{vault[env_type].BAL_METABASE_ENCRYPTION_SECRET_KEY}}
      MB_PASSWORD_COMPLEXITY: strong
      MB_START_OF_WEEK: monday
      MB_EMAIL_SMTP_HOST: {{vault[env_type].MNA_BAL_SMTP_HOST}}
      MB_EMAIL_SMTP_PORT: {{vault[env_type].MNA_BAL_SMTP_PORT}}
      MB_EMAIL_SMTP_USERNAME: {{vault[env_type].MNA_BAL_SMTP_AUTH_USER}}
      MB_EMAIL_SMTP_PASSWORD: {{vault[env_type].MNA_BAL_SMTP_AUTH_PASS}}
      MB_EMAIL_SMTP_SECURITY: tls
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 6m
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.bal.{{env_type}}.metabase
        fluentd-async: "true"

  clamav:
    <<: *default
    image: clamav/clamav:latest
    deploy:
      <<: *deploy-default
      resources:
        limits:
          memory: 2g
    healthcheck:
      test: ["CMD", "/usr/local/bin/clamdcheck.sh"]
      interval: 60s
      retries: 3
      start_period: 6m
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.bal.{{env_type}}.clamav
        fluentd-async: "true"
    volumes:
      - /opt/bal/data/clamav:/var/lib/clamav

  nodeexporter:
    <<: *default
    image: prom/node-exporter:v1.5.0
    hostname: {{host_name}}
    user: root
    deploy:
      <<: *deploy-default
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/var/cron-exporter'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /opt/bal/data/cron:/var/cron-exporter:rw

  cadvisor:
    <<: *default
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    deploy:
      <<: *deploy-default
    hostname: {{host_name}}
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  fluentd:
    <<: *default
    image: grafana/fluent-plugin-loki:main
    user: root
    volumes:
      - /opt/bal/configs/fluentd/conf:/fluentd/etc
      - /opt/bal/data/fluentd:/var/log/fluent
      - /var/log:/var/log
      # Needed for journald log ingestion:
      - /etc/machine-id:/etc/machine-id
      - /dev/log:/dev/log
      - /var/run/systemd/journal/:/var/run/systemd/journal/
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    command:
      - "fluentd"
      - "-v"
      - "-p"
      - "/fluentd/plugins"
    environment:
      LOKI_URL: https://monitoring.apprentissage.beta.gouv.fr/loki
      # LOKI_USERNAME:
      # LOKI_PASSWORD:

networks:
  bal_network:
    name: bal_network
    attachable: true
    external: true
    driver: overlay
